-- Script SQL para criar a tabela de usuários no Oracle
-- Execute este script no DBeaver ou em qualquer cliente Oracle

-- Criar tabela usuarios
CREATE TABLE usuarios (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(150) NOT NULL,
    senha_hash VARCHAR2(255) NOT NULL,
    data_cadastro TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Adicionar constraint para garantir email único
ALTER TABLE usuarios ADD CONSTRAINT unique_email UNIQUE (email);

-- Criar índice para melhorar performance na busca por email
CREATE INDEX idx_usuarios_email ON usuarios(email);

-- Comentários para documentação
COMMENT ON TABLE usuarios IS 'Tabela para armazenar dados dos usuários do sistema';
COMMENT ON COLUMN usuarios.id IS 'Identificador único do usuário (auto-incremento)';
COMMENT ON COLUMN usuarios.nome IS 'Nome completo do usuário';
COMMENT ON COLUMN usuarios.email IS 'Email único do usuário (usado para login)';
COMMENT ON COLUMN usuarios.senha_hash IS 'Hash da senha criptografada com bcrypt';
COMMENT ON COLUMN usuarios.data_cadastro IS 'Data e hora do cadastro do usuário';

-- Criar tabela roteiros
CREATE TABLE roteiros (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_id NUMBER NOT NULL,
    titulo VARCHAR2(200) NOT NULL,
    descricao CLOB,
    locais CLOB NOT NULL, -- JSON com os locais do roteiro
    data_criacao TIMESTAMP DEFAULT SYSTIMESTAMP,
    data_modificacao TIMESTAMP DEFAULT SYSTIMESTAMP,
    id_roteiro VARCHAR2(100),
    CONSTRAINT fk_roteiros_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Criar tabela de alertas
CREATE TABLE SEGURANCA_PUBLICA_ALERTAS (
    ID_ALERTA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_ROTEIRO NUMBER NOT NULL,
    ALERTA CLOB NOT NULL
);

-- Criar tabela favoritos
CREATE TABLE favoritos (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_id NUMBER NOT NULL,
    place_id VARCHAR2(255) NOT NULL,
    nome VARCHAR2(200) NOT NULL,
    endereco VARCHAR2(500),
    tipo VARCHAR2(100),
    rating NUMBER(3,2),
    foto_url VARCHAR2(500),
    data_favorito TIMESTAMP DEFAULT SYSTIMESTAMP,
    user_ratings_total NUMBER DEFAULT 0,
    price_level NUMBER DEFAULT 0,
    descricao CLOB,
    CONSTRAINT fk_favoritos_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    CONSTRAINT unique_usuario_place UNIQUE (usuario_id, place_id)
);

-- Criar índices para performance
CREATE INDEX idx_roteiros_usuario ON roteiros(usuario_id);
CREATE INDEX idx_roteiros_data ON roteiros(data_criacao DESC);
CREATE INDEX idx_favoritos_usuario ON favoritos(usuario_id);
CREATE INDEX idx_favoritos_data ON favoritos(data_favorito DESC);

-- Comentários para documentação
COMMENT ON TABLE roteiros IS 'Tabela para armazenar roteiros salvos pelos usuários';
COMMENT ON COLUMN roteiros.id IS 'Identificador único do roteiro';
COMMENT ON COLUMN roteiros.usuario_id IS 'ID do usuário proprietário do roteiro';
COMMENT ON COLUMN roteiros.titulo IS 'Título do roteiro';
COMMENT ON COLUMN roteiros.descricao IS 'Descrição detalhada do roteiro';
COMMENT ON COLUMN roteiros.locais IS 'JSON com os locais do roteiro';
COMMENT ON COLUMN roteiros.data_criacao IS 'Data de criação do roteiro';
COMMENT ON COLUMN roteiros.data_modificacao IS 'Data da última modificação';

COMMENT ON TABLE favoritos IS 'Tabela para armazenar locais favoritados pelos usuários';
COMMENT ON COLUMN favoritos.id IS 'Identificador único do favorito';
COMMENT ON COLUMN favoritos.usuario_id IS 'ID do usuário que favoritou';
COMMENT ON COLUMN favoritos.place_id IS 'ID do local no Google Places';
COMMENT ON COLUMN favoritos.nome IS 'Nome do local';
COMMENT ON COLUMN favoritos.endereco IS 'Endereço do local';
COMMENT ON COLUMN favoritos.tipo IS 'Tipo do local (restaurante, museu, etc.)';
COMMENT ON COLUMN favoritos.rating IS 'Avaliação do local';
COMMENT ON COLUMN favoritos.foto_url IS 'URL da foto do local';
COMMENT ON COLUMN favoritos.data_favorito IS 'Data em que foi favoritado';

-- Verificar se as tabelas foram criadas corretamente
SELECT 
    table_name,
    column_name,
    data_type,
    data_length,
    nullable
FROM user_tab_columns 
WHERE table_name IN ('USUARIOS', 'ROTEIROS', 'FAVORITOS')
ORDER BY table_name, column_id;
